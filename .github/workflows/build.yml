name: NES Dependencies builder

on:
  push:
    tags:
      - 'v*'

jobs:
  build-x64-linux:
    timeout-minutes: 360
    env:
      VCPKG_DEP_LIST: x64-linux
      VCPKG_FEATURE_FLAGS: -binarycaching
    runs-on: [self-hosted, linux, X64, dep-builder]
    strategy:
      matrix:
        osversion: [ubuntu-18.04, ubuntu-20.04, ubuntu-22.04]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Set output vars to the actual tag name
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
      - name: Build Docker
        id: builddocker
        working-directory: ${{ github.workspace }}/docker/
        run: docker build  -t nes_dep_build_${{ matrix.osversion }} -f Dockerfile-${{ matrix.osversion }} .
      - name: Install vcpkg
        id: bootstrapvcpkg
        run: |
          docker run -v ${{ github.workspace }}:/build_dir --rm nes_dep_build_${{ matrix.osversion }} ./build_dir/vcpkg/bootstrap-vcpkg.sh -disableMetrics
        shell: bash
      - name: Install dependencies in manifest mode
        id: installdeps
        run: |
          docker run -v ${{ github.workspace }}:/build_dir --rm nes_dep_build_${{ matrix.osversion }} \
          ./build_dir/vcpkg/vcpkg install --triplet=${{ env.VCPKG_DEP_LIST }}-nes \
          --host-triplet=${{ env.VCPKG_DEP_LIST }}-nes --overlay-triplets=/build_dir/custom-triplets/ --x-manifest-root=/build_dir/ --overlay-ports=/build_dir/vcpkg-registry/ports
      - name: Compress artifacts
        id: compressdeps
        run: |
          mkdir nes-dependencies-${{ steps.vars.outputs.tag }}-${{ env.VCPKG_DEP_LIST }}-nes && \
          mv ${{ github.workspace }}/vcpkg_installed nes-dependencies-${{ steps.vars.outputs.tag }}-${{ env.VCPKG_DEP_LIST }}-nes/installed && \
          mkdir -p nes-dependencies-${{ steps.vars.outputs.tag }}-${{ env.VCPKG_DEP_LIST }}-nes/scripts/buildsystems && \
          cp ${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake ${{ github.workspace }}/nes-dependencies-${{ steps.vars.outputs.tag }}-${{ env.VCPKG_DEP_LIST }}-nes/scripts/buildsystems/ && \
          touch ${{ github.workspace }}/nes-dependencies-${{ steps.vars.outputs.tag }}-${{ env.VCPKG_DEP_LIST }}-nes/.vcpkg-root && \
          7z a nes-dependencies-${{ steps.vars.outputs.tag }}-${{ env.VCPKG_DEP_LIST }}-${{ matrix.osversion }}-nes.7z nes-dependencies-${{ steps.vars.outputs.tag }}-${{ env.VCPKG_DEP_LIST }}-nes -mx9 -aoa
      - name: Release
        uses: softprops/action-gh-release@v1
        id: createrelease
        with:
          files: |
            nes-dependencies-${{ steps.vars.outputs.tag }}-${{ env.VCPKG_DEP_LIST }}-${{ matrix.osversion }}-nes.7z
      - name: Upload GitHub Actions artifact of vcpkg build logs
        uses: actions/upload-artifact@v2
        if: failure()
        id: uploadlogs
        with:
          name: vcpkg-logs-${{ env.VCPKG_DEP_LIST }}
          path: ${{ github.workspace }}/vcpkg/buildtrees/**/*.log
      - name: Clean build artifacts
        id: cleanbuildartifacts
        if: always()
        run: |
          rm -rf nes-dependencies-${{ steps.vars.outputs.tag }}-${{ env.VCPKG_DEP_LIST }}-nes \
          nes-dependencies-${{ steps.vars.outputs.tag }}-${{ env.VCPKG_DEP_LIST }}-${{ matrix.osversion }}-nes.7z \
          ${{ github.workspace }}/vcpkg/{buildtrees,downloads,packages}
      - name: Remove docker image
        id: removedockerimage
        if: always()
        run: |
          test -n "$(docker image ls -q nes_dep_build_${{ matrix.osversion }})" && \
          docker image rm $(docker image ls -q nes_dep_build_${{ matrix.osversion }}) || \
          true

  build-arm64-linux:
    timeout-minutes: 360
    env:
      VCPKG_DEP_LIST: arm64-linux
      VCPKG_FORCE_SYSTEM_BINARIES: 1
      VCPKG_FEATURE_FLAGS: -binarycaching
    runs-on: [self-hosted, linux, ARM64, dep-builder]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Set output vars to the actual tag name
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
      - name: Install vcpkg
        id: bootstrapvcpkg
        run: |
          ${{ github.workspace }}/vcpkg/bootstrap-vcpkg.sh -disableMetrics
        shell: bash
      - name: Install dependencies in manifest mode
        id: installdeps
        run: |
          ${{ github.workspace }}/vcpkg/vcpkg install --triplet=${{ env.VCPKG_DEP_LIST }}-nes --host-triplet=${{ env.VCPKG_DEP_LIST }}-nes --overlay-triplets=custom-triplets/ --overlay-ports=vcpkg-registry/ports
      - name: Compress artifacts
        id: compressdeps
        run: |
          mkdir nes-dependencies-${{ steps.vars.outputs.tag }}-${{ env.VCPKG_DEP_LIST }}-nes && \
          mv ${{ github.workspace }}/vcpkg_installed nes-dependencies-${{ steps.vars.outputs.tag }}-${{ env.VCPKG_DEP_LIST }}-nes/installed && \
          mkdir -p nes-dependencies-${{ steps.vars.outputs.tag }}-${{ env.VCPKG_DEP_LIST }}-nes/scripts/buildsystems && \
          cp ${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake ${{ github.workspace }}/nes-dependencies-${{ steps.vars.outputs.tag }}-${{ env.VCPKG_DEP_LIST }}-nes/scripts/buildsystems/ && \
          touch ${{ github.workspace }}/nes-dependencies-${{ steps.vars.outputs.tag }}-${{ env.VCPKG_DEP_LIST }}-nes/.vcpkg-root && \
          7z a nes-dependencies-${{ steps.vars.outputs.tag }}-${{ env.VCPKG_DEP_LIST }}-nes.7z nes-dependencies-${{ steps.vars.outputs.tag }}-${{ env.VCPKG_DEP_LIST }}-nes -mx9 -aoa
      - name: Release
        uses: softprops/action-gh-release@v1
        id: createrelease
        with:
          files: |
            nes-dependencies-${{ steps.vars.outputs.tag }}-${{ env.VCPKG_DEP_LIST }}-nes.7z
      - name: Upload GitHub Actions artifact of vcpkg build logs
        uses: actions/upload-artifact@v2
        if: failure()
        id: uploadlogs
        with:
          name: vcpkg-logs-${{ env.VCPKG_DEP_LIST }}
          path: ${{ github.workspace }}/vcpkg/buildtrees/**/*.log
      - name: Clean build artifacts
        id: cleanbuildartifacts
        if: always()
        run: |
          rm -rf nes-dependencies-${{ steps.vars.outputs.tag }}-${{ env.VCPKG_DEP_LIST }}-nes \
          nes-dependencies-${{ steps.vars.outputs.tag }}-${{ env.VCPKG_DEP_LIST }}-${{ matrix.osversion }}-nes.7z \
          ${{ github.workspace }}/vcpkg/{buildtrees,downloads,packages}

  build-arm-osx:
    timeout-minutes: 360
    env:
      VCPKG_DEP_LIST: arm64-osx
      VCPKG_FEATURE_FLAGS: -binarycaching
    runs-on: [ self-hosted, macos, ARM64]
    steps:
      - uses: lukka/get-cmake@latest
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: install python
        run: |
          brew install python
      - name: Check PATH and Python version
        run: |
          echo $PATH
          which python
          file $(which python)
      - name: Set output vars to the actual tag name
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
      - name: Install vcpkg
        id: bootstrapvcpkg
        run: |
          ${{ github.workspace }}/vcpkg/bootstrap-vcpkg.sh -disableMetrics
        shell: bash
      - name: Install dependencies in manifest mode
        id: installdeps
        run: |
          ${{ github.workspace }}/vcpkg/vcpkg install --triplet=${{ env.VCPKG_DEP_LIST }}-nes --host-triplet=${{ env.VCPKG_DEP_LIST }}-nes --overlay-triplets=custom-triplets/ --overlay-ports=vcpkg-registry/ports
      - name: Compress artifacts
        id: compressdeps
        run: |
          mkdir nes-dependencies-${{ steps.vars.outputs.tag }}-${{ env.VCPKG_DEP_LIST }}-nes && \
          mv ${{ github.workspace }}/vcpkg_installed nes-dependencies-${{ steps.vars.outputs.tag }}-${{ env.VCPKG_DEP_LIST }}-nes/installed && \
          mkdir -p nes-dependencies-${{ steps.vars.outputs.tag }}-${{ env.VCPKG_DEP_LIST }}-nes/scripts/buildsystems && \
          cp ${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake ${{ github.workspace }}/nes-dependencies-${{ steps.vars.outputs.tag }}-${{ env.VCPKG_DEP_LIST }}-nes/scripts/buildsystems/ && \
          touch ${{ github.workspace }}/nes-dependencies-${{ steps.vars.outputs.tag }}-${{ env.VCPKG_DEP_LIST }}-nes/.vcpkg-root && \
          7z a nes-dependencies-${{ steps.vars.outputs.tag }}-${{ env.VCPKG_DEP_LIST }}-nes.7z nes-dependencies-${{ steps.vars.outputs.tag }}-${{ env.VCPKG_DEP_LIST }}-nes -mx9 -aoa
      - name: Release
        uses: softprops/action-gh-release@v1
        id: createrelease
        with:
          files: |
            nes-dependencies-${{ steps.vars.outputs.tag }}-${{ env.VCPKG_DEP_LIST }}-nes.7z
      - name: Upload GitHub Actions artifact of vcpkg build logs
        uses: actions/upload-artifact@v2
        if: failure()
        id: uploadlogs
        with:
          name: vcpkg-logs-${{ env.VCPKG_DEP_LIST }}
          path: ${{ github.workspace }}/vcpkg/buildtrees/**/*.log
      - name: Clean build artifacts
        id: cleanbuildartifacts
        if: always()
        run: |
          rm -rf nes-dependencies-${{ steps.vars.outputs.tag }}-${{ env.VCPKG_DEP_LIST }}-nes \
          nes-dependencies-${{ steps.vars.outputs.tag }}-${{ env.VCPKG_DEP_LIST }}-${{ matrix.osversion }}-nes.7z \
          ${{ github.workspace }}/vcpkg/{buildtrees,downloads,packages}

  build-x64-osx:
    timeout-minutes: 360
    env:
      VCPKG_DEP_LIST: x64-osx
      VCPKG_FEATURE_FLAGS: -binarycaching
    runs-on: [ self-hosted, macos, X64, dep-builder ]
    steps:
      - uses: lukka/get-cmake@latest
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Check PATH and Python version
        run: |
          echo $PATH
          which python
          file $(which python)
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Set output vars to the actual tag name
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
      - name: Install vcpkg
        id: bootstrapvcpkg
        run: |
          ${{ github.workspace }}/vcpkg/bootstrap-vcpkg.sh -disableMetrics
        shell: bash
      - name: Install dependencies in manifest mode
        id: installdeps
        run: |
          ${{ github.workspace }}/vcpkg/vcpkg install --triplet=${{ env.VCPKG_DEP_LIST }}-nes --host-triplet=${{ env.VCPKG_DEP_LIST }}-nes --overlay-triplets=custom-triplets/ --overlay-ports=vcpkg-registry/ports
      - name: Compress artifacts
        id: compressdeps
        run: |
          mkdir nes-dependencies-${{ steps.vars.outputs.tag }}-${{ env.VCPKG_DEP_LIST }}-nes && \
          mv ${{ github.workspace }}/vcpkg_installed nes-dependencies-${{ steps.vars.outputs.tag }}-${{ env.VCPKG_DEP_LIST }}-nes/installed && \
          mkdir -p nes-dependencies-${{ steps.vars.outputs.tag }}-${{ env.VCPKG_DEP_LIST }}-nes/scripts/buildsystems && \
          cp ${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake ${{ github.workspace }}/nes-dependencies-${{ steps.vars.outputs.tag }}-${{ env.VCPKG_DEP_LIST }}-nes/scripts/buildsystems/ && \
          touch ${{ github.workspace }}/nes-dependencies-${{ steps.vars.outputs.tag }}-${{ env.VCPKG_DEP_LIST }}-nes/.vcpkg-root && \
          7z a nes-dependencies-${{ steps.vars.outputs.tag }}-${{ env.VCPKG_DEP_LIST }}-nes.7z nes-dependencies-${{ steps.vars.outputs.tag }}-${{ env.VCPKG_DEP_LIST }}-nes -mx9 -aoa
      - name: Release
        uses: softprops/action-gh-release@v1
        id: createrelease
        with:
          files: |
            nes-dependencies-${{ steps.vars.outputs.tag }}-${{ env.VCPKG_DEP_LIST }}-nes.7z
      - name: Upload GitHub Actions artifact of vcpkg build logs
        uses: actions/upload-artifact@v2
        if: failure()
        id: uploadlogs
        with:
          name: vcpkg-logs-${{ env.VCPKG_DEP_LIST }}
          path: ${{ github.workspace }}/vcpkg/buildtrees/**/*.log
      - name: Clean build artifacts
        id: cleanbuildartifacts
        if: always()
        run: |
          rm -rf nes-dependencies-${{ steps.vars.outputs.tag }}-${{ env.VCPKG_DEP_LIST }}-nes \
          nes-dependencies-${{ steps.vars.outputs.tag }}-${{ env.VCPKG_DEP_LIST }}-${{ matrix.osversion }}-nes.7z \
          ${{ github.workspace }}/vcpkg/{buildtrees,downloads,packages}

  build-x64-linux-musl:
    timeout-minutes: 360
    env:
      VCPKG_DEP_LIST: x64-linux-musl
      VCPKG_FEATURE_FLAGS: -binarycaching
    runs-on: [ self-hosted, linux, x64, dep-builder ]
    strategy:
      matrix:
        osversion: [ alpine-3.15 ]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Set output vars to the actual tag name
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
      - name: Build Docker
        id: builddocker
        working-directory: ${{ github.workspace }}/docker/
        run: docker build  -t nes_dep_build_${{ matrix.osversion }} -f Dockerfile-${{ matrix.osversion }} .
      - name: Install vcpkg
        id: bootstrapvcpkg
        run: |
          docker run -v ${{ github.workspace }}:/build_dir --rm nes_dep_build_${{ matrix.osversion }} ./build_dir/vcpkg/bootstrap-vcpkg.sh -disableMetrics
        shell: bash
      - name: Install dependencies in manifest mode
        id: installdeps
        run: |
          docker run -v ${{ github.workspace }}:/build_dir --env VCPKG_FORCE_SYSTEM_BINARIES=1 --rm nes_dep_build_${{ matrix.osversion }} \
          ./build_dir/vcpkg/vcpkg install --triplet=${{ env.VCPKG_DEP_LIST }}-nes \
          --host-triplet=${{ env.VCPKG_DEP_LIST }}-nes --overlay-triplets=/build_dir/custom-triplets/ --x-manifest-root=/build_dir/ --overlay-ports=/build_dir/vcpkg-registry/ports
      - name: Compress artifacts
        id: compressdeps
        run: |
          mkdir nes-dependencies-${{ steps.vars.outputs.tag }}-${{ env.VCPKG_DEP_LIST }}-nes && \
          mv ${{ github.workspace }}/vcpkg_installed nes-dependencies-${{ steps.vars.outputs.tag }}-${{ env.VCPKG_DEP_LIST }}-nes/installed && \
          mkdir -p nes-dependencies-${{ steps.vars.outputs.tag }}-${{ env.VCPKG_DEP_LIST }}-nes/scripts/buildsystems && \
          cp ${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake ${{ github.workspace }}/nes-dependencies-${{ steps.vars.outputs.tag }}-${{ env.VCPKG_DEP_LIST }}-nes/scripts/buildsystems/ && \
          touch ${{ github.workspace }}/nes-dependencies-${{ steps.vars.outputs.tag }}-${{ env.VCPKG_DEP_LIST }}-nes/.vcpkg-root && \
          7z a nes-dependencies-${{ steps.vars.outputs.tag }}-${{ env.VCPKG_DEP_LIST }}-${{ matrix.osversion }}-nes.7z nes-dependencies-${{ steps.vars.outputs.tag }}-${{ env.VCPKG_DEP_LIST }}-nes -mx9 -aoa
      - name: Release
        uses: softprops/action-gh-release@v1
        id: createrelease
        with:
          files: |
            nes-dependencies-${{ steps.vars.outputs.tag }}-${{ env.VCPKG_DEP_LIST }}-${{ matrix.osversion }}-nes.7z
      - name: Upload GitHub Actions artifact of vcpkg build logs
        uses: actions/upload-artifact@v2
        if: failure()
        id: uploadlogs
        with:
          name: vcpkg-logs-${{ env.VCPKG_DEP_LIST }}
          path: ${{ github.workspace }}/vcpkg/buildtrees/**/*.log
      - name: Clean build artifacts
        id: cleanbuildartifacts
        if: always()
        run: |
          rm -rf nes-dependencies-${{ steps.vars.outputs.tag }}-${{ env.VCPKG_DEP_LIST }}-nes \
          nes-dependencies-${{ steps.vars.outputs.tag }}-${{ env.VCPKG_DEP_LIST }}-${{ matrix.osversion }}-nes.7z \
          ${{ github.workspace }}/vcpkg/{buildtrees,downloads,packages}
      - name: Remove docker image
        id: removedockerimage
        if: always()
        run: |
          test -n "$(docker image ls -q nes_dep_build_${{ matrix.osversion }})" && \
          docker image rm $(docker image ls -q nes_dep_build_${{ matrix.osversion }}) || \
          true
